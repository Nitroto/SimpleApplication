worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include                 mime.types;
    default_type            application/octet-stream;

    sendfile                on;
    keepalive_timeout       65;
    fastcgi_read_timeout    900;
    proxy_connect_timeout   12000;
    proxy_send_timeout      12000;
    proxy_read_timeout      12000;
    send_timeout            12000;
    proxy_request_buffering off;
    server_tokens           off;

    client_header_buffer_size   1k;
    large_client_header_buffers 4 4k;

    # https://docs.nginx.com/nginx/admin-guide/security-controls/controlling-access-proxied-http/#limiting-the-request-rate
    limit_req_zone $binary_remote_addr zone=limit_by_addr:10m rate=100r/s;
    limit_req_status 429;

    upstream node_backend {
        zone upstreams 64K;
        server backend:4000 max_fails=1 fail_timeout=2s;
        keepalive 2;
    }

    server {
        listen       80 default_server;
        listen  [::]:80;
        server_name  _;

        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;
        }

        location /api {
            limit_req zone=limit_by_addr burst=100 nodelay;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            # https://www.linode.com/docs/guides/use-nginx-reverse-proxy/#nginx-reverse-proxy-configuration-options
            proxy_http_version 1.1;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass http://node_backend/api;
        }
    }
}
